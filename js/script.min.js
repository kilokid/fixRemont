!function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)r.d(n,o,function(t){return e[t]}.bind(null,o));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=0)}([function(e,t,r){"use strict";r.r(t);(()=>{const e=document.querySelector(".slider"),t=e.querySelector(".slider-content"),r=e.querySelectorAll(".slide"),n=e.querySelector(".slide"),o=e.querySelectorAll(".slide-description"),l=e.querySelector(".btn-prev"),i=e.querySelector(".btn-next"),c=n.offsetWidth;let s=1,u=0;t.style.width=50*r.length+"%",r.forEach(e=>{e.style.width=""+c});const d=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1;e>=r.length?(s=0,e=s):e<0&&(s=r.length-1,e=s),r[e].classList.add("slide-active"),o[e].classList.add("slide-description-active")},a=()=>{r.forEach(e=>e.classList.remove("slide-active")),o.forEach(e=>e.classList.remove("slide-description-active"))};a(),d(s),i.addEventListener("click",()=>{a(),d(++s),u=c*s*-1+c,t.style.transform=`translateX(${u}px)`}),l.addEventListener("click",()=>{a(),d(--s),u=c*s*-1+c,t.style.transform=`translateX(${u}px)`})})()}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,