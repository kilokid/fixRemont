!function(e){var t={};function r(l){if(t[l])return t[l].exports;var o=t[l]={i:l,l:!1,exports:{}};return e[l].call(o.exports,o,o.exports,r),o.l=!0,o.exports}r.m=e,r.c=t,r.d=function(e,t,l){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:l})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var l=Object.create(null);if(r.r(l),Object.defineProperty(l,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)r.d(l,o,function(t){return e[t]}.bind(null,o));return l},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=0)}([function(e,t,r){"use strict";r.r(t);(()=>{const e=document.querySelector(".slider-content"),t=document.querySelectorAll(".slide"),r=document.querySelectorAll(".slide-description"),l=document.getElementById("btn-prev"),o=document.getElementById("btn-next");let n=1,c=0;const s=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1;e>=t.length?(n=0,e=n):e<0&&(n=t.length-1,e=n),t[e].classList.add("slide-active"),r[e].classList.add("slide-description-active")},i=()=>{t.forEach(e=>e.classList.remove("slide-active")),r.forEach(e=>e.classList.remove("slide-description-active"))};i(),s(n),e.style.width=45*t.length+"%",t.forEach(e=>{e.style.width="880px"}),o.addEventListener("click",()=>{i(),s(++n),c=880*n*-1+880,e.style.transform=`translateX(${c}px)`}),l.addEventListener("click",()=>{i(),s(--n),c=880*n*-1+880,e.style.transform=`translateX(${c}px)`})})(),document.querySelectorAll('a[href^="#"]:not(a[href="#"])').forEach(e=>{e.addEventListener("click",t=>{t.preventDefault();const r=e.getAttribute("href").slice(1);document.getElementById(r).scrollIntoView({behavior:"smooth"})})}),(()=>{const e=document.querySelector(".form-content"),t=document.querySelector(".successfuly"),r=document.querySelector('input[type="email"]'),l=document.querySelector(".email"),o=document.querySelector('input[name="name"]'),n=document.getElementById("btn-submit"),c=/^(([^<>()[\].,;:\s@"]+(\.[^<>()[\].,;:\s@"]+)*)|(".+"))@(([^<>()[\].,;:\s@"]+\.)+[^<>()[\].,;:\s@"]{2,})$/iu;r.addEventListener("input",()=>{var e;e=r.value,c.test(e)?(r.style.borderColor="#666666",l.style.color="#666666"):(r.style.borderColor="#F9572E",l.style.color="#F9572E")}),n.addEventListener("click",l=>{if(l.preventDefault(),""===r.value||""===o.value)return r.style.borderColor="#F9572E",void(o.style.borderColor="#F9572E");t.style.display="flex",e.style.display="none"}),document.addEventListener("input",e=>{const t=e.target;t.closest("#form-name")||"Имя и фамилия*"===t.placeholder?(t.value=t.value.replace(/[^а-яё ]+$/gi,""),t.style.borderColor="#666666"):""===t.value&&(t.style.borderColor="#F9572E"),(t.closest("#form-email")||"E-mail адрес*"===t.placeholder)&&(t.value=t.value.replace(/[^a-z@. ]+$/gi,"")),(t.closest("#form-phone")||"Телефон"===t.placeholder)&&(t.value=t.value.replace(/\D/gi,"").substr(0,11))})})()}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,